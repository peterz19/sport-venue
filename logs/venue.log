WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::staticFieldBase has been called by com.google.inject.internal.aop.HiddenClassDefiner (file:/opt/homebrew/Cellar/maven/3.9.10/libexec/lib/guice-5.1.0-classes.jar)
WARNING: Please consider reporting this to the maintainers of class com.google.inject.internal.aop.HiddenClassDefiner
WARNING: sun.misc.Unsafe::staticFieldBase will be removed in a future release
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------< com.sportvenue:sport-venue-venue >------------------
[INFO] Building sport-venue-venue 1.0.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ sport-venue-venue >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ sport-venue-venue ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 5 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ sport-venue-venue ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ sport-venue-venue ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /Users/peter/Desktop/file/code/pri/java/sport-venue/sport-venue-venue/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ sport-venue-venue ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ sport-venue-venue <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ sport-venue-venue ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

2025-07-11 16:44:36 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2025-07-11 16:44:36 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=venue-service, profiles=[local], label=main, version=null, state=null
2025-07-11 16:44:36 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-Config resource 'class path resource [config-repo/venue-service.yml]' via location 'classpath:/config-repo/' (document #0)'}, BootstrapPropertySource {name='bootstrapProperties-classpath:/config-repo/application.yml'}]
2025-07-11 16:44:36 [main] INFO  c.sportvenue.venue.VenueApplication - The following 1 profile is active: "local"
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 5 JPA repository interfaces.
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sportvenue.venue.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sportvenue.venue.repository.VenueCheckInRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sportvenue.venue.repository.VenuePriceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sportvenue.venue.repository.VenueRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sportvenue.venue.repository.VenueReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-11 16:44:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2025-07-11 16:44:38 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=23772b77-62c8-3478-b657-7f57bca9816e
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001ffc013cd750] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-11 16:44:38 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARNING: A restricted method in java.lang.System has been called
WARNING: java.lang.System::load has been called by org.apache.tomcat.jni.Library in an unnamed module (file:/Users/peter/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.16/tomcat-embed-core-10.1.16.jar)
WARNING: Use --enable-native-access=ALL-UNNAMED to avoid a warning for callers in this module
WARNING: Restricted methods will be blocked in a future release unless native access is enabled

2025-07-11 16:44:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-07-11 16:44:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 16:44:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-11 16:44:38 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-11 16:44:38 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1928 ms
2025-07-11 16:44:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-11 16:44:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-11 16:44:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-11 16:44:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-11 16:44:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-11 16:44:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@219edc05
2025-07-11 16:44:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-11 16:44:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-11 16:44:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-11 16:44:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table merchants (
        id bigint not null auto_increment,
        address varchar(200),
        business_hours varchar(100),
        business_license varchar(50),
        contact_email varchar(100),
        contact_name varchar(50),
        contact_phone varchar(20),
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(1000),
        establishment_date datetime(6),
        images varchar(1000),
        legal_person varchar(50),
        legal_person_id varchar(20),
        logo varchar(200),
        merchant_code varchar(50) not null,
        merchant_type enum ('INDIVIDUAL','COMPANY','CHAIN') not null,
        monthly_revenue decimal(38,2),
        name varchar(100) not null,
        rating decimal(38,2),
        rating_count integer,
        registered_capital decimal(38,2),
        remark varchar(500),
        short_name varchar(50),
        status enum ('ACTIVE','INACTIVE','SUSPENDED') not null,
        tags varchar(500),
        total_revenue decimal(38,2),
        update_by bigint,
        update_time datetime(6) not null,
        venue_count integer,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table merchants (
        id bigint not null auto_increment,
        address varchar(200),
        business_hours varchar(100),
        business_license varchar(50),
        contact_email varchar(100),
        contact_name varchar(50),
        contact_phone varchar(20),
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(1000),
        establishment_date datetime(6),
        images varchar(1000),
        legal_person varchar(50),
        legal_person_id varchar(20),
        logo varchar(200),
        merchant_code varchar(50) not null,
        merchant_type enum ('INDIVIDUAL','COMPANY','CHAIN') not null,
        monthly_revenue decimal(38,2),
        name varchar(100) not null,
        rating decimal(38,2),
        rating_count integer,
        registered_capital decimal(38,2),
        remark varchar(500),
        short_name varchar(50),
        status enum ('ACTIVE','INACTIVE','SUSPENDED') not null,
        tags varchar(500),
        total_revenue decimal(38,2),
        update_by bigint,
        update_time datetime(6) not null,
        venue_count integer,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table permissions (
        id bigint not null auto_increment,
        category enum ('VENUE','RESERVATION','CHECKIN','USER','SYSTEM','STATISTICS') not null,
        code varchar(100) not null,
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(200),
        http_method varchar(10),
        name varchar(100) not null,
        parent_id bigint,
        permission_type enum ('MENU','BUTTON','API') not null,
        remark varchar(500),
        resource_path varchar(200),
        sort integer,
        status enum ('ACTIVE','INACTIVE') not null,
        update_by bigint,
        update_time datetime(6) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table permissions (
        id bigint not null auto_increment,
        category enum ('VENUE','RESERVATION','CHECKIN','USER','SYSTEM','STATISTICS') not null,
        code varchar(100) not null,
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(200),
        http_method varchar(10),
        name varchar(100) not null,
        parent_id bigint,
        permission_type enum ('MENU','BUTTON','API') not null,
        remark varchar(500),
        resource_path varchar(200),
        sort integer,
        status enum ('ACTIVE','INACTIVE') not null,
        update_by bigint,
        update_time datetime(6) not null,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table role_permissions (
        role_id bigint not null,
        permission_id bigint not null,
        primary key (role_id, permission_id)
    ) engine=InnoDB
Hibernate: 
    create table role_permissions (
        role_id bigint not null,
        permission_id bigint not null,
        primary key (role_id, permission_id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table roles (
        id bigint not null auto_increment,
        code varchar(50) not null,
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(200),
        merchant_id bigint,
        name varchar(50) not null,
        remark varchar(500),
        role_type enum ('SYSTEM','MERCHANT','CUSTOM') not null,
        sort integer,
        status enum ('ACTIVE','INACTIVE') not null,
        update_by bigint,
        update_time datetime(6) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table roles (
        id bigint not null auto_increment,
        code varchar(50) not null,
        create_by bigint,
        create_time datetime(6) not null,
        description varchar(200),
        merchant_id bigint,
        name varchar(50) not null,
        remark varchar(500),
        role_type enum ('SYSTEM','MERCHANT','CUSTOM') not null,
        sort integer,
        status enum ('ACTIVE','INACTIVE') not null,
        update_by bigint,
        update_time datetime(6) not null,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
Hibernate: 
    create table user_roles (
        user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint not null auto_increment,
        avatar varchar(200),
        create_by bigint,
        create_time datetime(6) not null,
        email varchar(100),
        last_login_ip varchar(50),
        last_login_time datetime(6),
        member_level enum ('BRONZE','SILVER','GOLD','PLATINUM','DIAMOND'),
        merchant_id bigint,
        merchant_name varchar(100),
        password varchar(100) not null,
        phone varchar(20),
        points integer,
        real_name varchar(50),
        remark varchar(500),
        status enum ('ACTIVE','INACTIVE','LOCKED') not null,
        update_by bigint,
        update_time datetime(6) not null,
        user_type enum ('B_MERCHANT','B_STAFF','C_USER','ADMIN') not null,
        username varchar(50) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table users (
        id bigint not null auto_increment,
        avatar varchar(200),
        create_by bigint,
        create_time datetime(6) not null,
        email varchar(100),
        last_login_ip varchar(50),
        last_login_time datetime(6),
        member_level enum ('BRONZE','SILVER','GOLD','PLATINUM','DIAMOND'),
        merchant_id bigint,
        merchant_name varchar(100),
        password varchar(100) not null,
        phone varchar(20),
        points integer,
        real_name varchar(50),
        remark varchar(500),
        status enum ('ACTIVE','INACTIVE','LOCKED') not null,
        update_by bigint,
        update_time datetime(6) not null,
        user_type enum ('B_MERCHANT','B_STAFF','C_USER','ADMIN') not null,
        username varchar(50) not null,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table venue_check_ins (
        id bigint not null auto_increment,
        check_in_no varchar(50) not null,
        check_in_time datetime(6),
        consecutive_days integer,
        create_by bigint,
        create_time datetime(6),
        device_id varchar(100),
        device_type enum ('MOBILE','TABLET','TERMINAL','PC'),
        duration_minutes integer,
        earned_points integer,
        location varchar(100),
        method enum ('QR_CODE','NFC','MANUAL','AUTO','FACE') not null,
        remark varchar(500),
        reservation_id bigint,
        total_check_ins integer,
        type enum ('CHECK_IN','CHECK_OUT','AUTO_CHECK_OUT','RE_CHECK_IN') not null,
        update_by bigint,
        update_time datetime(6),
        user_id bigint not null,
        user_name varchar(50),
        venue_id bigint not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table venue_check_ins (
        id bigint not null auto_increment,
        check_in_no varchar(50) not null,
        check_in_time datetime(6),
        consecutive_days integer,
        create_by bigint,
        create_time datetime(6),
        device_id varchar(100),
        device_type enum ('MOBILE','TABLET','TERMINAL','PC'),
        duration_minutes integer,
        earned_points integer,
        location varchar(100),
        method enum ('QR_CODE','NFC','MANUAL','AUTO','FACE') not null,
        remark varchar(500),
        reservation_id bigint,
        total_check_ins integer,
        type enum ('CHECK_IN','CHECK_OUT','AUTO_CHECK_OUT','RE_CHECK_IN') not null,
        update_by bigint,
        update_time datetime(6),
        user_id bigint not null,
        user_name varchar(50),
        venue_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table venue_prices (
        id bigint not null auto_increment,
        base_price decimal(10,2) not null,
        create_by bigint,
        create_time datetime(6),
        enabled bit,
        holiday_price decimal(10,2),
        max_duration integer,
        member_price decimal(10,2),
        min_duration integer,
        name varchar(100) not null,
        priority integer,
        remark varchar(500),
        time_slot_end varchar(10),
        time_slot_start varchar(10),
        type enum ('HOURLY','DAILY','PACKAGE','MEMBER','PEAK','OFF_PEAK') not null,
        update_by bigint,
        update_time datetime(6),
        valid_from datetime(6),
        valid_to datetime(6),
        venue_id bigint not null,
        vip_price decimal(10,2),
        weekdays varchar(20),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table venue_prices (
        id bigint not null auto_increment,
        base_price decimal(10,2) not null,
        create_by bigint,
        create_time datetime(6),
        enabled bit,
        holiday_price decimal(10,2),
        max_duration integer,
        member_price decimal(10,2),
        min_duration integer,
        name varchar(100) not null,
        priority integer,
        remark varchar(500),
        time_slot_end varchar(10),
        time_slot_start varchar(10),
        type enum ('HOURLY','DAILY','PACKAGE','MEMBER','PEAK','OFF_PEAK') not null,
        update_by bigint,
        update_time datetime(6),
        valid_from datetime(6),
        valid_to datetime(6),
        venue_id bigint not null,
        vip_price decimal(10,2),
        weekdays varchar(20),
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table venue_reservations (
        id bigint not null auto_increment,
        actual_amount decimal(10,2),
        cancel_by bigint,
        cancel_reason varchar(200),
        cancel_time datetime(6),
        create_by bigint,
        create_time datetime(6),
        discount_amount decimal(10,2),
        duration integer,
        end_time datetime(6),
        payment_method enum ('WECHAT','ALIPAY','CASH','CARD','POINTS'),
        payment_status enum ('UNPAID','PAID','REFUNDED','PARTIAL_REFUND') not null,
        payment_time datetime(6),
        people_count integer,
        remark varchar(500),
        reservation_no varchar(50) not null,
        start_time datetime(6),
        status enum ('PENDING','CONFIRMED','CANCELLED','COMPLETED','NO_SHOW') not null,
        total_price decimal(10,2),
        transaction_no varchar(100),
        type enum ('NORMAL','MEMBER','VIP','GROUP') not null,
        unit_price decimal(10,2),
        update_by bigint,
        update_time datetime(6),
        user_id bigint not null,
        user_name varchar(50),
        user_phone varchar(20),
        venue_id bigint not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table venue_reservations (
        id bigint not null auto_increment,
        actual_amount decimal(10,2),
        cancel_by bigint,
        cancel_reason varchar(200),
        cancel_time datetime(6),
        create_by bigint,
        create_time datetime(6),
        discount_amount decimal(10,2),
        duration integer,
        end_time datetime(6),
        payment_method enum ('WECHAT','ALIPAY','CASH','CARD','POINTS'),
        payment_status enum ('UNPAID','PAID','REFUNDED','PARTIAL_REFUND') not null,
        payment_time datetime(6),
        people_count integer,
        remark varchar(500),
        reservation_no varchar(50) not null,
        start_time datetime(6),
        status enum ('PENDING','CONFIRMED','CANCELLED','COMPLETED','NO_SHOW') not null,
        total_price decimal(10,2),
        transaction_no varchar(100),
        type enum ('NORMAL','MEMBER','VIP','GROUP') not null,
        unit_price decimal(10,2),
        update_by bigint,
        update_time datetime(6),
        user_id bigint not null,
        user_name varchar(50),
        user_phone varchar(20),
        venue_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    create table venues (
        id bigint not null auto_increment,
        address varchar(200) not null,
        area decimal(38,2),
        capacity integer,
        check_in_enabled bit,
        close_time varchar(10),
        create_by bigint,
        create_time datetime(6),
        current_occupancy integer,
        description varchar(500),
        facilities varchar(500),
        images TEXT,
        latitude decimal(38,2),
        longitude decimal(38,2),
        merchant_id bigint not null,
        merchant_name varchar(100),
        name varchar(100) not null,
        open_time varchar(10),
        phone varchar(20),
        points_enabled bit,
        rating decimal(38,2),
        rating_count integer,
        reservation_enabled bit,
        status enum ('ACTIVE','INACTIVE','MAINTENANCE') not null,
        sub_type enum ('BASKETBALL','FOOTBALL','TENNIS','SWIMMING','GYM','BADMINTON','TABLE_TENNIS','VOLLEYBALL','BASEBALL','RUNNING','YOGA','DANCE','BOXING','MARTIAL_ARTS','OTHER') not null,
        tags TEXT,
        type enum ('INDOOR','OUTDOOR','INSTITUTION','PARK','PAID','FREE') not null,
        update_by bigint,
        update_time datetime(6),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table venues (
        id bigint not null auto_increment,
        address varchar(200) not null,
        area decimal(38,2),
        capacity integer,
        check_in_enabled bit,
        close_time varchar(10),
        create_by bigint,
        create_time datetime(6),
        current_occupancy integer,
        description varchar(500),
        facilities varchar(500),
        images TEXT,
        latitude decimal(38,2),
        longitude decimal(38,2),
        merchant_id bigint not null,
        merchant_name varchar(100),
        name varchar(100) not null,
        open_time varchar(10),
        phone varchar(20),
        points_enabled bit,
        rating decimal(38,2),
        rating_count integer,
        reservation_enabled bit,
        status enum ('ACTIVE','INACTIVE','MAINTENANCE') not null,
        sub_type enum ('BASKETBALL','FOOTBALL','TENNIS','SWIMMING','GYM','BADMINTON','TABLE_TENNIS','VOLLEYBALL','BASEBALL','RUNNING','YOGA','DANCE','BOXING','MARTIAL_ARTS','OTHER') not null,
        tags TEXT,
        type enum ('INDOOR','OUTDOOR','INSTITUTION','PARK','PAID','FREE') not null,
        update_by bigint,
        update_time datetime(6),
        primary key (id)
    ) engine=InnoDB
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    alter table merchants 
       drop index UK_eopmihf50qel9ic2v35oolma2
Hibernate: 
    alter table merchants 
       drop index UK_eopmihf50qel9ic2v35oolma2
2025-07-11 16:44:41 [main] DEBUG org.hibernate.SQL - 
    alter table merchants 
       add constraint UK_eopmihf50qel9ic2v35oolma2 unique (merchant_code)
Hibernate: 
    alter table merchants 
       add constraint UK_eopmihf50qel9ic2v35oolma2 unique (merchant_code)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table permissions 
       drop index UK_7lcb6glmvwlro3p2w2cewxtvd
Hibernate: 
    alter table permissions 
       drop index UK_7lcb6glmvwlro3p2w2cewxtvd
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table permissions 
       add constraint UK_7lcb6glmvwlro3p2w2cewxtvd unique (code)
Hibernate: 
    alter table permissions 
       add constraint UK_7lcb6glmvwlro3p2w2cewxtvd unique (code)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       drop index UK_ch1113horj4qr56f91omojv8
Hibernate: 
    alter table roles 
       drop index UK_ch1113horj4qr56f91omojv8
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       add constraint UK_ch1113horj4qr56f91omojv8 unique (code)
Hibernate: 
    alter table roles 
       add constraint UK_ch1113horj4qr56f91omojv8 unique (code)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_6dotkott2kjsp8vw4d0m25fb7
Hibernate: 
    alter table users 
       drop index UK_6dotkott2kjsp8vw4d0m25fb7
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: 
    alter table users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_du5v5sr43g5bfnji4vb8hg5s3
Hibernate: 
    alter table users 
       drop index UK_du5v5sr43g5bfnji4vb8hg5s3
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
Hibernate: 
    alter table users 
       add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_r43af9ap4edm43mmtq01oddj6
Hibernate: 
    alter table users 
       drop index UK_r43af9ap4edm43mmtq01oddj6
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
Hibernate: 
    alter table users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table venue_check_ins 
       drop index UK_le4e00d7jh4hrid9nsp2sanxj
Hibernate: 
    alter table venue_check_ins 
       drop index UK_le4e00d7jh4hrid9nsp2sanxj
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table venue_check_ins 
       add constraint UK_le4e00d7jh4hrid9nsp2sanxj unique (check_in_no)
Hibernate: 
    alter table venue_check_ins 
       add constraint UK_le4e00d7jh4hrid9nsp2sanxj unique (check_in_no)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table venue_reservations 
       drop index UK_1koa71b6ktpijv9pwwbli4woy
Hibernate: 
    alter table venue_reservations 
       drop index UK_1koa71b6ktpijv9pwwbli4woy
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table venue_reservations 
       add constraint UK_1koa71b6ktpijv9pwwbli4woy unique (reservation_no)
Hibernate: 
    alter table venue_reservations 
       add constraint UK_1koa71b6ktpijv9pwwbli4woy unique (reservation_no)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table role_permissions 
       add constraint FKegdk29eiy7mdtefy5c7eirr6e 
       foreign key (permission_id) 
       references permissions (id)
Hibernate: 
    alter table role_permissions 
       add constraint FKegdk29eiy7mdtefy5c7eirr6e 
       foreign key (permission_id) 
       references permissions (id)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table role_permissions 
       add constraint FKn5fotdgk8d1xvo8nav9uv3muc 
       foreign key (role_id) 
       references roles (id)
Hibernate: 
    alter table role_permissions 
       add constraint FKn5fotdgk8d1xvo8nav9uv3muc 
       foreign key (role_id) 
       references roles (id)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
Hibernate: 
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
2025-07-11 16:44:42 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
Hibernate: 
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
2025-07-11 16:44:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 16:44:42 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::objectFieldOffset has been called by io.netty.util.internal.PlatformDependent0$4 (file:/Users/peter/.m2/repository/io/netty/netty-common/4.1.101.Final/netty-common-4.1.101.Final.jar)
WARNING: Please consider reporting this to the maintainers of class io.netty.util.internal.PlatformDependent0$4
WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
2025-07-11 16:44:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-11 16:44:44 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-07-11 16:44:44 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-11 16:44:44 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-07-11 16:44:44 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-07-11 16:44:44 [main] INFO  c.netflix.discovery.DiscoveryClient - Client configured to neither register nor query for data.
2025-07-11 16:44:44 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1752223484163 with initial instances count: 0
2025-07-11 16:44:44 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application VENUE-SERVICE with eureka with status UP
2025-07-11 16:44:44 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application VENUE-SERVICE with eureka with status DOWN
2025-07-11 16:44:44 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-11 16:44:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-11 16:44:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-11 16:44:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-11 16:44:44 [main] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-07-11 16:44:44 [main] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-07-11 16:44:44 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-11 16:44:44 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-11 16:44:44 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  14.498 s
[INFO] Finished at: 2025-07-11T16:44:45+08:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.0:run (default-cli) on project sport-venue-venue: Process terminated with exit code: 1 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
